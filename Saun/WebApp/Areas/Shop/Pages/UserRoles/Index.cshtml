@page
@using Sauna.Pages.Abstractions.Aids
@using Sauna.Pages.Abstractions.Constants
@using Sauna.Pages.Abstractions.Extensions
@model Sauna.Pages.Shop.UserRoles.UserRolesPage

@{
    Layout = "_Index";
    var page = Model.PageUrl;
}
@section Create {
    @Html.Link(string.Empty, new Link(Captions.Create, Model.CreationUrl))
}


<body>
    <table class="table">
        <thead>
            @Html.Header(
                new Link(Html.DisplayNameFor(m => m.Item.UserId), Model.GetSortString(m => m.UserId, page)),
                new Link(Html.DisplayNameFor(m => m.Item.RoleId), Model.GetSortString(m => m.RoleId, page)),
                new Link(Html.DisplayNameFor(m => m.Item.ValidFrom), Model.GetSortString(m => m.ValidFrom, page)),
                new Link(Html.DisplayNameFor(m => m.Item.ValidTo), Model.GetSortString(m => m.ValidTo, page)),                
                new Link(Html.DisplayNameFor(m => m.Item.Comment), Model.GetSortString(m => m.Comment, page))
                
                )
        </thead>

        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    @Html.Row(
                        false,
                        page,
                        item.GetId(),
                        Model.SortOrder,
                        Model.SearchString,
                        Model.PageIndex,
                        Model.FixedFilter,
                        Model.FixedValue,
                        Html.Raw(Model.GetUserName(item.UserId)),
                        Html.Raw(Model.GetRoleName(item.RoleId)),
                        Html.DisplayFor(modelItem => item.ValidFrom),
                        Html.DisplayFor(modelItem => item.ValidTo),
                        Html.DisplayFor(modelItem => item.Comment)
                        )
                </tr>
            }
        </tbody>
    </table>
</body>
